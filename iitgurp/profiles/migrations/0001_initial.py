# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-12-16 23:35
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(b'admin', b'admin'), (b'faculty', b'faculty'), (b'student', b'student')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('web_mail', models.EmailField(max_length=254, null=True)),
                ('full_name', models.CharField(max_length=100, null=True)),
                ('department', models.CharField(blank=True, choices=[(b'BioSciences and Bioengineering', b'BioSciences and Bioengineering'), (b'Chemistry', b'Chemistry'), (b'Chemical Engineering', b'Chemical Engineering'), (b'Civil Engineering', b'Civil Engineering'), (b'Computer Science and Engineering', b'Computer Science and Engineering'), (b'Design', b'Design'), (b'Electronics and Electrical Engineering', b'Electronics and Electrical Engineering'), (b'Electronics and Communication Engineering', b'Electronics and Communication Engineering'), (b'Humanities & Social Sciences', b'Humanities & Social Sciences'), (b'Mathematics', b'Mathematics'), (b'Mechanical Engineering', b'Mechanical Engineering'), (b'Physics', b'Physics'), (b'Center for Energy', b'Center for Energy')], max_length=100, null=True)),
                ('room_no', models.CharField(blank=True, max_length=7, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll_no', models.DecimalField(decimal_places=0, max_digits=10, unique=True)),
                ('year_of_admission', models.IntegerField(validators=[django.core.validators.MinValueValidator(2012)], verbose_name='Year of Admission')),
                ('department', models.CharField(choices=[(b'BioSciences and Bioengineering', b'BioSciences and Bioengineering'), (b'Chemistry', b'Chemistry'), (b'Chemical Engineering', b'Chemical Engineering'), (b'Civil Engineering', b'Civil Engineering'), (b'Computer Science and Engineering', b'Computer Science and Engineering'), (b'Design', b'Design'), (b'Electronics and Electrical Engineering', b'Electronics and Electrical Engineering'), (b'Electronics and Communication Engineering', b'Electronics and Communication Engineering'), (b'Humanities & Social Sciences', b'Humanities & Social Sciences'), (b'Mathematics', b'Mathematics'), (b'Mechanical Engineering', b'Mechanical Engineering'), (b'Physics', b'Physics'), (b'Center for Energy', b'Center for Energy')], max_length=200, verbose_name='Major Department')),
                ('discipline', models.CharField(max_length=200, verbose_name='Major Discipline')),
                ('programme', models.CharField(choices=[(b'B.Tech.', b'B.Tech.'), (b'B.Des.', b'B.Des.'), (b'M.Tech.', b'M.Tech.'), (b'M.Des.', b'M.Des.'), (b'Ph.D.', b'Ph.D.'), (b'M.Sc.', b'M.Sc.'), (b'M.A.', b'M.A.'), (b'MSR', b'MSR')], max_length=10, verbose_name='Major Programme')),
                ('web_mail', models.EmailField(max_length=254, null=True)),
                ('full_name', models.CharField(max_length=100, null=True)),
                ('gender', models.CharField(choices=[(b'MALE', b'MALE'), (b'FEMALE', b'FEMALE')], max_length=10)),
                ('hostel', models.CharField(choices=[(b'Barak', b'Barak'), (b'Brahmaputra', b'Brahmaputra'), (b'Dhansiri', b'Dhansiri'), (b'Dibang', b'Dibang'), (b'Dihing', b'Dihing'), (b'Kameng', b'Kameng'), (b'Kapili', b'Kapili'), (b'Lohit', b'Lohit'), (b'Manas', b'Manas'), (b'Married Scholars', b'Married Scholars'), (b'Siang', b'Siang'), (b'Subansiri', b'Subansiri'), (b'Umiam', b'Umiam'), (b'Other', b'Other')], max_length=50)),
                ('room_no', models.CharField(blank=True, max_length=7, null=True)),
                ('mobile_campus', models.CharField(blank=True, max_length=12, null=True)),
                ('alternate_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
